{"version":3,"sources":["components/SearchForm.js","components/SearchHeader.js","components/SearchResults.js","components/Home.js","components/Header.js","components/Footer.js","components/RecipeInformation.js","App.js","serviceWorker.js","index.js"],"names":["SearchForm","props","onSubmit","handleSubmit","className","placeholder","type","name","onChange","handleChange","value","searchString","class","SearchHeader","lastSearch","SearchResults","handleClick","images","useState","setRecipeId","console","log","length","map","image","i","to","title","key","id","onClick","newRecipeId","alt","src","Home","handleImageClick","recipeId","Header","Footer","RecipeInformation","thisRecipe","setThisRecipe","useEffect","url","searchOptions","api","fetch","then","response","json","catch","error","getThisRecipe","extendedIngredients","cuisines","analyzedInstructions","readyInMinutes","item","original","itemA","steps","itemB","step","App","process","limit","endpointBySearch","setImages","setSearchString","setLastSearch","getImages","results","event","target","preventDefault","path","exact","render","routerProps","match","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.92b62d86.chunk.js","sourcesContent":["import React from 'react';\n\nfunction SearchForm(props) {\n\treturn (\n\t\t<form onSubmit={props.handleSubmit}>\n\t\t\t<input\n\t\t\t\tclassName='form-control'\n\t\t\t\tplaceholder='food words...'\n\t\t\t\ttype='text'\n\t\t\t\tname='searchString'\n\t\t\t\tonChange={props.handleChange}\n\t\t\t\tvalue={props.searchString}\n\t\t\t/>\n\t\t\t<button type='submit' class='btn btn-secondary'>\n\t\t\t\tshow me the food.\n\t\t\t</button>\n\t\t</form>\n\t);\n}\n\nexport default SearchForm;\n","import React, { Component } from 'react';\n\nfunction SearchHeader(props) {\n\treturn (\n\t\t<>\n\t\t\t<p className='search-header'>\n\t\t\t\tcurrently showing recipes for <span className='last-search'>{props.lastSearch}</span>\n\t\t\t</p>\n\t\t</>\n\t);\n}\n\nexport default SearchHeader;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useState } from 'react'\n\nconst SearchResults = ( {handleClick, images} ) => {\n\t\nconst [recipeId, setRecipeId] = useState(0, '');\n\nconsole.log(images)\n\t// if (!images.image) {\n\t// \treturn 'loading...';\n\t// }\n\n\tif (!images.length) {\n\t\treturn <h2 className='no-recipes'>No Recipes Found!</h2>;\n\t}\n\treturn (\n\t\t<div className='food-pics'>\n\t\t\t{images.map((image, i) => (\n\t\t\t\t<Link to={'/recipe-information/' + image.title} key={image.id}>\n\t\t\t\t\t<div\n\t\t\t\t\t\tkey={image.id}\n\t\t\t\t\t\tclassName='image'\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tconst newRecipeId = image.id;\n\t\t\t\t\t\t\tsetRecipeId(newRecipeId);\n\t\t\t\t\t\t\thandleClick(newRecipeId);\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\talt={image.title}\n\t\t\t\t\t\t\tsrc={`https://spoonacular.com/recipeImages/${image.id}-312x231`}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<p>{image.title}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</Link>\n\t\t\t))}\n\t\t</div>\n\t);\n\t\n};\n\nexport default SearchResults;\n\n/*\n\nhttps://spoonacular.com/recipeImages/15407-556x370.jpg\n\n{thisRecipe.analyzedInstructions.length == 0 ? (\n\t\t\t\t<p className='no-instructions'>\n\t\t\t\t\tSorry, this recipe does not include instructions.\n\t\t\t\t</p>\n\t\t\t) : (\n\t\t\t\t<div className='instructions'>\n\t\t\t\t\t<h3>Instructions</h3>\n\t\t\t\t\t<ol>\n\t\t\t\t\t\t{thisRecipe.analyzedInstructions.map((itemA) =>\n\t\t\t\t\t\t\titemA.steps.map((itemB, i) => <li key={i}>{itemB.step}</li>)\n\t\t\t\t\t\t)}{' '}\n\t\t\t\t\t</ol>\n\t\t\t\t</div>\n\t\t\t)}\n*/","import React from 'react';\nimport SearchForm from './SearchForm';\nimport SearchHeader from './SearchHeader';\nimport SearchResults from './SearchResults';\n\nfunction Home(props) {\n\treturn (\n\t\t<>\n\t\t\t<SearchHeader lastSearch={props.lastSearch} />\n\t\t\t<SearchForm\n\t\t\t\tsearchString={props.searchString}\n\t\t\t\thandleSubmit={props.handleSubmit}\n\t\t\t\thandleChange={props.handleChange}\n\t\t\t/>\n\t\t\t<section>\n\t\t\t\t<SearchResults\n\t\t\t\t\timages={props.images}\n\t\t\t\t\thandleClick={props.handleImageClick}\n\t\t\t\t\trecipeId={props.recipeId}\n\t\t\t\t/>\n\t\t\t</section>\n\t\t</>\n\t);\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n\nfunction Header() {\n\treturn (\n\t\t<>\n\t\t\t<div className='header-left'><h1 className='main-title'>{\"\\u00b7 i'm hungry \\u00b7\"}</h1>\n\t\t\t<p className='subtitle'><em>(the only cookbook you'll ever need)</em></p></div>\n\t\t\t<Link to='/'>\n\t\t\t\t<h1>·home·</h1>\n\t\t\t</Link>\n\t\t</>\n\t);\n}\n\nexport default Header;\n","import React from 'react'\n\nconst Footer = () => {\n\treturn <p className='myFooter'>{'\\u00A9 Billy Kaufman 2020'}</p>;\n};\n\nexport default Footer","import React, { useState, useEffect } from 'react';\n\nfunction RecipeInformation(props) {\n\tconst [thisRecipe, setThisRecipe] = useState('');\n\n\tfunction getThisRecipe() {\n\t\tconst url = `${props.searchOptions.api}${props.recipeId}/information?apiKey=${props.searchOptions.key}`;\n\t\tfetch(url)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((response) => {\n\t\t\t\tsetThisRecipe(response);\n\t\t\t})\n\t\t\t.catch(console.error);\n\t}\n\n\tuseEffect(() => {\n\t\tgetThisRecipe();\n\t\t// eslint-disable-next-line\n\t}, []);\n\n\tif (\n\t\t!thisRecipe.extendedIngredients ||\n\t\t!thisRecipe.cuisines ||\n\t\t!thisRecipe.analyzedInstructions\n\t) {\n\t\treturn (<p>\n\t\t\t<span className='loading'>loading...</span>\n\t\t</p>);\n\t}\n\tconsole.log(thisRecipe);\n\treturn (\n\t\t<div className='jumbo-like'>\n\t\t\t<img\n\t\t\t\talt={thisRecipe.title}\n\t\t\t\tsrc={thisRecipe.image}\n\t\t\t\tclassName='card' id='information-image'\n\t\t\t/>\n\n\t\t\t<h2 className='recipe-title'>{thisRecipe.title}</h2>\n\n\t\t\t{/* <ul className='cuisines'>\n\t\t\t\t{thisRecipe.cuisines.map((item, i) => (\n\t\t\t\t\t<li key={i}>{`\\u00b7${item}\\u00b7`}</li>\n\t\t\t\t))}\n\t\t\t</ul> */}\n\n\t\t\t<h5 className='duration'>Ready in {thisRecipe.readyInMinutes} minutes</h5>\n\n\t\t\t<div className='ingredients'>\n\t\t\t\t<h3>Ingredients</h3>\n\t\t\t\t<ul>\n\t\t\t\t\t{thisRecipe.extendedIngredients.map((item, i) => (\n\t\t\t\t\t\t<li key={i}>{item.original}</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</div>\n\n\t\t\t{thisRecipe.analyzedInstructions.length == 0 ? (\n\t\t\t\t<p className='no-instructions'>\n\t\t\t\t\tSorry, this recipe does not include instructions.\n\t\t\t\t</p>\n\t\t\t) : (\n\t\t\t\t<div className='instructions'>\n\t\t\t\t\t<h3>Instructions</h3>\n\t\t\t\t\t<ol>\n\t\t\t\t\t\t{thisRecipe.analyzedInstructions.map((itemA) =>\n\t\t\t\t\t\t\titemA.steps.map((itemB, i) => <li key={i}>{itemB.step}</li>)\n\t\t\t\t\t\t)}{' '}\n\t\t\t\t\t</ol>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default RecipeInformation;\n","import React, { useState, useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport RecipeInformation from './components/RecipeInformation';\n\nimport 'bootswatch/dist/sandstone/bootstrap.min.css'; // Added this :boom:\nimport './App.css';\n\n// import './App.css';\n\nfunction App() {\n\t//construct api url\n\tconst searchOptions = {\n\t\tkey: process.env.REACT_APP_SPOONACULAR_KEY,\n\t\tlimit: 100,\n\t\tapi: 'https://api.spoonacular.com/recipes/',\n\t\tendpointBySearch: 'complexSearch',\n\t};\n\n\t//set state\n\tconst [images, setImages] = useState([]);\n\tconst [searchString, setSearchString] = useState('peanut butter');\n\tconst [lastSearch, setLastSearch] = useState('');\n\tconst [recipeId, setRecipeId] = useState(0, '');\n\n\tuseEffect(() => {\n\t\tgetImages(searchString);\n\t\t// eslint-disable-next-line\n\t}, []);\n\n\tfunction getImages(searchString) {\n\t\tconst url = `${searchOptions.api}${searchOptions.endpointBySearch}?apiKey=${searchOptions.key}&query=${searchString}&number=${searchOptions.limit}`;\n\n\t\tfetch(url)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((response) => {\n\t\t\t\tsetImages(response.results);\n\t\t\t\tsetLastSearch(searchString);\n\t\t\t\tsetSearchString('');\n\t\t\t})\n\t\t\t.catch(console.error);\n\t}\n\n\tfunction handleChange(event) {\n\t\tsetSearchString(event.target.value);\n\t}\n\tfunction handleSubmit(event) {\n\t\tevent.preventDefault();\n\t\tgetImages(searchString);\n\t}\n\n\t// update state of recipeId with new value from child SearchResults\n\tfunction handleImageClick(recipeId) {\n\t\tsetRecipeId(recipeId);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<header>\n\t\t\t\t<Header />\n\t\t\t</header>\n\t\t\t<main>\n\t\t\t\t<Route\n\t\t\t\t\tpath='/'\n\t\t\t\t\texact\n\t\t\t\t\trender={(routerProps) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Home\n\t\t\t\t\t\t\t\tmatch={routerProps.match}\n\t\t\t\t\t\t\t\timages={images}\n\t\t\t\t\t\t\t\tlastSearch={lastSearch}\n\t\t\t\t\t\t\t\tsearchString={searchString}\n\t\t\t\t\t\t\t\thandleSubmit={handleSubmit}\n\t\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\t\thandleImageClick={handleImageClick}\n\t\t\t\t\t\t\t\trecipeId={recipeId}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Route\n\t\t\t\t\tpath='/:recipe-information'\n\t\t\t\t\trender={(routerProps) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<RecipeInformation\n\t\t\t\t\t\t\t\tmatch={routerProps.match}\n\t\t\t\t\t\t\t\trecipeId={recipeId}\n\t\t\t\t\t\t\t\tsearchOptions={searchOptions}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</main>\n\t\t\t<footer>\n\t\t\t\t<Footer />\n\t\t\t</footer>\n\t\t</>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n\n\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}